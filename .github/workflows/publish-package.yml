name: Build Authorization package

on:
  workflow_call:
    inputs:
      package-path:
        required: true
        type: string
      direct-call:
        required: false
        type: boolean
        default: false
      solution-file:
        required: false
        type: string
      dotnet-version:
        required: false
        type: string
        default: "8.0.x"

env:
  GITHUB_NAMESPACE: ThijmenBrand-LifeManager
  GITHUB_USERNAME: ThijmenBrand

jobs:
  setup-package-release:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - id: matrix
        run: |
          package_paths="${{ inputs.package-path }}"
          package_paths_array=$(echo "$package_paths" | awk 'BEGIN{ORS=""; print "["} {gsub(/"/, "\\\""); printf "\"%s\", ", $0} END{print "]"}' | sed 's/, ]/]/')
          echo "value=$package_paths_array" >> $GITHUB_OUTPUT
      - run: |
          echo "${{ steps.matrix.outputs.value }}"

  publish-package:
    needs: setup-package-release
    name: Publish package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: ${{ fromJson(needs.setup-package-release.outputs.matrix) }}

    steps:
      - name: Download build artifact
        if: ${{ !inputs.direct-call }}
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - uses: actions/checkout@v2
        if: ${{ inputs.direct-call }}

      - name: Setup .NET
        if: ${{ inputs.direct-call }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Add GitHub NuGet package registry
        if: ${{ inputs.direct-call }}
        run: dotnet nuget add source https://nuget.pkg.github.com/${{ env.GITHUB_NAMESPACE }}/index.json --name github-package-registry --username ${{ env.GITHUB_USERNAME }} --password ${{ secrets.PACKAGE_TOKEN_SECRET }} --store-password-in-clear-text

      - name: Restore NuGet packages
        if: ${{ inputs.direct-call }}
        run: dotnet restore ${{ inputs.solution-file }}

      #build the project
      - name: Build the project
        if: ${{ inputs.direct-call }}
        run: dotnet build ${{ inputs.solution-file }} --no-restore --configuration Release

      - name: Set version
        id: set_version
        run: |
          echo "version=$(date +'%Y.%m.%d').$(echo $GITHUB_RUN_NUMBER | cut -c1-7)" >> "$GITHUB_OUTPUT"

      - name: Add GitHub NuGet package registry
        run: dotnet nuget add source https://nuget.pkg.github.com/${{ env.GITHUB_NAMESPACE }}/index.json --name github --username ${{ env.GITHUB_USERNAME }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

      #pack the project
      - name: NuGet pack
        run: dotnet pack ${{ matrix.value }} --output ./nupkg -p:PackageVersion=${{ steps.set_version.outputs.version }} -p:Configuration=Release

      - name: Push packages
        run: dotnet nuget push ./nupkg/*.nupkg --source github --api-key ${{ secrets.PACKAGE_TOKEN_SECRET }}
